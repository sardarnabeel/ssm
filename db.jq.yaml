AWSTemplateFormatVersion: '2010-09-09'
Description: DB Server Stack
Parameters:
  VPCStackName:
    Type: String
    Description: Name of the VPC stack to import resources from
  dbintance:
    Type: String
  PrivateID:
    Type: String
  vpcid:
    Type: String
Resources:
  MyIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: nabeel-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess
  DBInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref MyIAMRole
  DBServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-007855ac798b5175e   # Replace with AMI ID
      InstanceType: t2.micro   # Replace with instance type
      KeyName: my-key-pair   # Replace with the name of the EC2 key pair
      SubnetId: !Ref PrivateID  # Import the private subnet ID from the VPC stack
      Tags:
        - Key: Name
          Value: private-server-training
      SecurityGroupIds:
        - !Ref dbintance
      IamInstanceProfile: !Ref DBInstanceProfile
      UserData: #working properly with parameter.yaml and parameter2.yaml and create database with giben user name
        Fn::Base64: !Sub | 
          #!/bin/bash
          set -x
          # Update and upgrade packages
          sudo apt update -y
          sudo apt upgrade -y
          sudo apt install jq -y
          sudo apt install awscli -y
          # Retrieve DBName, DBUser, and DBPassword from SSM parameters
          DBName=$(aws ssm get-parameter --region us-east-1 --name DBName --query 'Parameter.Value' --output text)
          DBUser=$(aws ssm get-parameter --region us-east-1 --name DBUser --query 'Parameter.Value' --output text)
          DBPassword=$(aws ssm get-parameter --region us-east-1 --name DBPassword --query 'Parameter.Value' --output text)
          sudo apt install mysql-server -y
          sudo mysql -h localhost -u root <<EOF
          CREATE DATABASE $DBName;
          CREATE USER '$DBUser'@'%' IDENTIFIED BY '$DBPassword';
          GRANT ALL PRIVILEGES ON *.* TO '$DBUser'@'%';
          GRANT ALL PRIVILEGES ON *.* TO '$DBUser'@'%' IDENTIFIED BY '$DBPassword';

          FLUSH PRIVILEGES;
          EOF
          sudo sed -i "s/.*bind-address.*/bind-address = 0.0.0.0/" /etc/mysql/mysql.conf.d/mysqld.cnf
          sudo systemctl restart mysql          
Outputs:
  DBInstancePrivateIP:
    Description: Private IP of the DB instance
    Value: !GetAtt DBServer.PrivateIp
    Export:
      Name: !Sub '${AWS::StackName}-DBInstancePrivateIP'


  # MyInstanceRole:
  #   Description: IAM Role for the DB server instance
  #   Value: !Ref MyIAMRole
  #   Export:
  #     Name: !Sub '${AWS::StackName}-MyInstanceRole'

  # DBInstanceProfileOutput:
  #   Description: Instance profile for the DB server instance
  #   Value: !Ref DBInstanceProfile
  #   Export:
  #     Name: !Sub '${AWS::StackName}-DBInstanceProfile'
